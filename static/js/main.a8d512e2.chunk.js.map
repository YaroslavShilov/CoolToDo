{"version":3,"sources":["store/StoreReducer.ts","components/Icons/EditIcon.tsx","components/Icons/AddIcon.tsx","store/StoreContext.ts","components/Tasks/AddTaskForm.tsx","components/Icons/CheckIcon.tsx","components/Icons/RemoveIcon.tsx","components/Icons/TrashIcon.tsx","components/Tasks/Task.tsx","components/Tasks/Tasks.tsx","components/Icons/ListIcon.tsx","components/Badge/Badge.tsx","components/List/List.tsx","components/Lists.tsx","components/Icons/CloseIcon.tsx","utils.ts","defaultDB.js","components/AddList/AddList.tsx","components/Sidebar.tsx","App.tsx","api/api.ts","store/StoreProvider.tsx","index.js"],"names":["ActionType","EditIcon","width","height","viewBox","fill","xmlns","d","AddIcon","stroke","strokeWidth","strokeLinecap","strokeLinejoin","StoreContext","React","createContext","undefined","useStoreContext","context","useContext","Error","AddTaskForm","list","addTask","useState","visibleForm","setVisibleForm","inputValue","setInputValue","isLoading","setIsLoading","toggleFormVisible","className","type","value","placeholder","onChange","e","target","onClick","id","trim","disabled","CheckIcon","RemoveIcon","TrashIcon","Task","text","completed","removeTask","changeTaskTitle","checkTask","isRemove","setIsRemove","isEdit","setIsEdit","setValue","checkIconClass","setCheckIconClass","useEffect","checked","htmlFor","readOnly","length","Tasks","withoutEmpty","changeListTitle","style","color","name","newTitle","window","prompt","tasks","map","key","ListIcon","Badge","icon","modificator","backgroundColor","List","items","isRemovable","removeList","activeList","onClickList","history","useHistory","location","useLocation","isActive","item","pathname","isActiveList","split","toString","isMainPage","push","defOnClickList","stopPropagation","Lists","lists","CloseIcon","fillRule","clipRule","defaultDB","colorId","listId","colors","findColor","find","localStorageGetItem","a","JSON","parse","localStorage","getItem","stringify","localStorageSetItem","obj","setItem","localStoragePostDefault","changeTask","ofTasks","taskId","task","ofLists","newTasks","AddList","maxListsSize","addList","visiblePopup","setVisiblePopup","selectedColor","selectColor","hidePopup","Date","Sidebar","App","setActiveList","getDB","postDefaultDB","isLists","isColors","path","exact","server","setLists","newLists","errorMessage","alert","setTasks","addTasks","then","callback","initialState","StoreReducer","state","action","SET_STATE","payload","ADD_LIST","title","newList","REMOVE_LIST","filter","CHANGE_LIST_TITLE","ADD_TASK","newTask","REMOVE_TASK","CHANGE_TASK_TITLE","CHECK_TASK","SET_ACTIVE_LIST","newState","url","Number","actions","StoreProvider","children","useReducer","dispatch","useCallback","defLists","defList","listTasks","listColor","Provider","confirm","ReactDOM","render","document","getElementById"],"mappings":"6PAUKA,E,iCCSUC,G,MAjBY,WACzB,OACE,yBACEC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAEN,0BACEC,EAAE,ynBACFF,KAAK,a,OCgBEG,EA3BW,WACxB,OACE,yBACEN,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAEN,0BACEC,EAAE,UACFE,OAAO,QACPC,YAAY,IACZC,cAAc,QACdC,eAAe,UAEjB,0BACEL,EAAE,UACFE,OAAO,QACPC,YAAY,IACZC,cAAc,QACdC,eAAe,YCKVC,EAAeC,IAAMC,mBAChCC,GAGWC,EAAkB,WAC7B,IAAMC,EAAUC,qBAAWN,GAE3B,QAAgBG,IAAZE,EACF,MAAM,IAAIE,MAAM,2BAGlB,OAAOF,GC9BIG,EAA+B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrCC,EAAYN,IAAZM,QADgD,EAGlBC,oBAAS,GAHS,mBAGjDC,EAHiD,KAGpCC,EAHoC,OAIpBF,mBAAS,IAJW,mBAIjDG,EAJiD,KAIrCC,EAJqC,OAKtBJ,oBAAS,GALa,mBAKjDK,EALiD,KAKtCC,EALsC,KAOlDC,EAAoB,WACxBL,GAAgBD,GAChBG,EAAc,KAehB,OACE,yBAAKI,UAAU,eACXP,EAMA,yBAAKO,UAAU,qBACb,2BACEA,UAAW,QACXC,KAAK,OACLC,MAAOP,EACPQ,YAAa,UACbC,SA1Bc,SAACC,GACvBT,EAAcS,EAAEC,OAAOJ,UA2BjB,4BACEF,UAAW,SACXO,QA1BQ,WAChBT,GAAa,GAEbP,EAAQD,EAAKkB,GAAIb,EAAWc,OAAQV,GAAmB,kBACrDD,GAAa,OAuBPY,UAAWf,GAAcE,GAExBA,EAAY,aAAe,QAE5BA,GACA,4BACEG,UAAW,gBACXU,SAAUb,EACVU,QAASR,GAHX,WArBJ,yBAAKC,UAAU,kBAAkBO,QAASR,GACxC,kBAAC,EAAD,MACA,0CC5BKY,EARa,WAC1B,OACE,yBAAKrC,MAAM,6BAA6BF,QAAQ,eAC9C,0BAAMG,EAAE,yRCcCqC,EAjBc,WAC3B,OACE,yBACE1C,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAEN,0BACEC,EAAE,8zBACFF,KAAK,YCHEwC,EARa,WAC1B,OACE,yBAAKvC,MAAM,6BAA6BF,QAAQ,eAC9C,0BAAMG,EAAE,iPCUDuC,EAAwB,SAAC,GAO/B,IANLN,EAMI,EANJA,GACAO,EAKI,EALJA,KACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,UACI,EAC4B3B,oBAAS,GADrC,mBACG4B,EADH,KACaC,EADb,OAEwB7B,oBAAS,GAFjC,mBAEG8B,EAFH,KAEWC,EAFX,OAGsB/B,mBAAiBuB,GAHvC,mBAGGb,EAHH,KAGUsB,EAHV,OAIwChC,mBAAiB,IAJzD,mBAIGiC,EAJH,KAImBC,EAJnB,KA+BJ,OALAC,qBAAU,WACJP,GAAUM,EAAkB,UAC5BJ,GAAQI,EAAkB,UAC7B,CAACN,EAAUE,IAGZ,wBAAItB,UAAWoB,GAAYE,EAAS,SAAW,IAC7C,yBAAKtB,UAAU,YACb,2BACEC,KAAK,WACLO,GAAE,eAAUA,GACZoB,QAASZ,EACTZ,SAAUe,IAEZ,2BAAOU,QAAO,eAAUrB,IACtB,kBAAC,EAAD,QAIJ,2BACEP,KAAK,OACLC,MAAOA,EACP4B,UAAWR,EACXlB,SA3CkB,SAACC,GAAD,OACtBmB,EAASnB,EAAEC,OAAOJ,UA6ChB,yBAAKF,UAAU,kBACZoB,GAAYE,EACX,oCACGpB,EAAMO,OAAOsB,OACZ,yBAAKxB,QA7CI,WACfe,IACEpB,EAAMO,SAAWM,GACnBG,EAAgBhB,EAAMO,QAExBc,GAAU,IAERH,GAAUH,KAsCwBjB,UAAWyB,GACrC,kBAAC,EAAD,OAEA,KACJ,yBAAKlB,QAxCO,WACpBgB,GAAU,GACVF,GAAY,GACZG,EAAST,KAsCC,kBAAC,EAAD,QAIJ,oCACE,yBAAKR,QAzDO,kBAAYgB,GAAWD,KA0DjC,kBAAC,EAAD,OAEF,yBAAKf,QA7DS,kBAAYc,GAAaD,KA8DrC,kBAAC,EAAD,WC3BCY,EAlDgB,SAAC,GAA4B,IAA1B1C,EAAyB,EAAzBA,KAAM2C,EAAmB,EAAnBA,aAAmB,EAMrDhD,IAJFiD,EAFuD,EAEvDA,gBACAhB,EAHuD,EAGvDA,gBACAD,EAJuD,EAIvDA,WACAE,EALuD,EAKvDA,UAWF,OACE,yBAAKnB,UAAU,SACb,wBAAIA,UAAW,eAAgBmC,MAAO,CAAEC,MAAO9C,EAAK8C,QACjD9C,EAAK+C,KACN,0BAAMrC,UAAU,oBAAoBO,QAZxB,WAChB,IAAM+B,EAA0BC,OAAOC,OACrC,mBACAlD,EAAK+C,MAEHC,GAAUJ,EAAgB5C,EAAKkB,GAAI8B,KAQjC,kBAAC,EAAD,SAIFhD,EAAKmD,MAAMV,SAAWE,GACtB,wBAAIjC,UAAW,gBAAf,0BAGF,wBAAIA,UAAU,gBACXV,EAAKmD,MAAMC,KAAI,gBAAGlC,EAAH,EAAGA,GAAIO,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAb,OACd,kBAAC,EAAD,CACE2B,IAAKnC,EACLA,GAAIA,EACJO,KAAMA,EACNC,UAAWA,EACXC,WAAY,kBAAMA,EAAW3B,EAAKkB,GAAIA,IACtCU,gBAAiB,SAAChB,GAAD,OACfgB,EAAgB5B,EAAKkB,GAAIA,EAAIN,IAE/BiB,UAAW,kBAAMA,EAAU7B,EAAKkB,GAAIA,GAAKQ,UAK/C,kBAAC,EAAD,CAAa2B,IAAKrD,EAAKkB,GAAIlB,KAAMA,MCzCxBsD,EAjBY,WACzB,OACE,yBACE1E,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAEN,0BACEC,EAAE,gvCACFF,KAAK,YCKEwE,G,MARgB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMV,EAAyB,EAAzBA,MAAOW,EAAkB,EAAlBA,YAC7C,OAAOD,EACL,0BAAM9C,UAAS,gBAAW+C,GAAe,KAAOD,GAEhD,0BAAM9C,UAAW,iBAAkBmC,MAAO,CAAEa,gBAAiBZ,O,eCgFlDa,EAnEe,SAAC,GAMxB,IALLC,EAKI,EALJA,MACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,WACAC,EACI,EADJA,YAEMC,EAAUC,cACVC,EAAWC,cAEXC,EAAW,SAACC,GAChB,OAAKP,EAGEA,EAAW7C,KAAOoD,EAAKpD,GAAK,SAAW,GAFzB,QAAZoD,EAAKpD,GAAe,SAAW,IAqB1C,OACE,wBAAIR,UAAU,QACXkD,EAAMR,KAAI,SAACkB,GACV,OACE,wBACEjB,IAAKiB,EAAKpD,GACVR,UAAW2D,EAASC,GACpBrD,QAAS,kBAvBI,SAACC,GACtB,GAAI8C,EAAaA,QACZ,CAAC,IACIO,EAAaJ,EAAbI,SAGFC,EAFuBD,EAASE,MAAM,WAAW,KAEjBvD,EAAGwD,WACnCC,EAA0B,MAAbJ,GAAsC,QAAlBrD,EAAGwD,WAErCF,GAAiBG,IACT,QAAPzD,EAAc+C,EAAQW,KAAK,KAC1BX,EAAQW,KAAR,iBAAuB1D,MAYT2D,CAAeP,EAAKpD,MAEnC,kBAAC,EAAD,CACEsC,KAAMc,EAAKd,KACXC,YAAaa,EAAKb,YAClBX,MAAOwB,EAAKxB,QAEd,8BAAOwB,EAAKvB,MACXuB,EAAKnB,OAAS,gCAASmB,EAAKnB,MAAMV,QAClCoB,GAAeC,GACd,yBACEpD,UAAU,cACVO,QAAS,SAACF,GACRA,EAAE+D,kBACFhB,EAAWQ,EAAKpD,MAGlB,kBAAC,EAAD,aCvDD6D,EAxBS,WAAO,IAAD,EACcpF,IAAlCqF,EADoB,EACpBA,MAAOlB,EADa,EACbA,WAAYC,EADC,EACDA,WAC3B,OACE,oCACE,kBAAC,EAAD,CACEH,MAAO,CACL,CACE1C,GAAI,MACJsC,KAAM,kBAAC,EAAD,MACNT,KAAM,cAGVgB,WAAYA,IAEd,kBAAC,EAAD,CACEH,MAAOoB,EACPnB,aAAW,EACXC,WAAYA,EACZC,WAAYA,MCFLkB,G,MAnBa,WAC1B,OACE,yBACErG,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,8BAEN,0BACEkG,SAAS,UACTC,SAAS,UACTlG,EAAE,g3CACFF,KAAK,e,6CCZPqG,ECHyB,CAC7BJ,MAAO,CACL,CACEjC,KAAM,OACNsC,QAAS,EACTlC,MAAO,GACPjC,GAAI,GAEN,CACE6B,KAAM,MACNsC,QAAS,EACTlC,MAAO,GACPjC,GAAI,GAEN,CACE6B,KAAM,aACNsC,QAAS,EACTlC,MAAO,GACPjC,GAAI,GAEN,CACE6B,KAAM,QACNsC,QAAS,EACTlC,MAAO,GACPjC,GAAI,GAEN,CACE6B,KAAM,WACNsC,QAAS,EACTlC,MAAO,GACPjC,GAAI,GAEN,CACE6B,KAAM,QACNsC,QAAS,EACTlC,MAAO,GACPjC,GAAI,IAGRiC,MAAO,CACL,CACEmC,OAAQ,EACR7D,KAAM,UACNC,WAAW,EACXR,GAAI,GAEN,CACEoE,OAAQ,EACR7D,KAAM,QACNC,WAAW,EACXR,GAAI,GAEN,CACEoE,OAAQ,EACR7D,KAAM,UACNC,WAAW,EACXR,GAAI,GAEN,CACEoE,OAAQ,EACR7D,KAAM,OACNC,WAAW,EACXR,GAAI,GAEN,CACEoE,OAAQ,EACR7D,KAAM,OACNC,WAAW,EACXR,GAAI,GAEN,CACEoE,OAAQ,EACR7D,KAAM,SACNC,WAAW,EACXR,GAAI,GAEN,CACEoE,OAAQ,EACR7D,KAAM,UACNC,WAAW,EACXR,GAAI,GAEN,CACEoE,OAAQ,EACR7D,KAAM,QACNC,WAAW,EACXR,GAAI,GAEN,CACEoE,OAAQ,EACR7D,KAAM,aACNC,WAAW,EACXR,GAAI,GAEN,CACEoE,OAAQ,EACR7D,KAAM,cACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,UACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,SACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,UACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,YACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,YACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,YACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,WACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,YACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,aACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,YACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,OACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,SACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,SACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,QACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,SACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,SACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,SACNC,WAAW,EACXR,GAAI,IAEN,CACEoE,OAAQ,EACR7D,KAAM,SACNC,WAAW,EACXR,GAAI,KAGRqE,OAAQ,CACN,CACErE,GAAI,EACJ4B,MAAO,UACPC,KAAM,QAER,CACE7B,GAAI,EACJ4B,MAAO,UACPC,KAAM,SAER,CACE7B,GAAI,EACJ4B,MAAO,UACPC,KAAM,QAER,CACE7B,GAAI,EACJ4B,MAAO,UACPC,KAAM,QAER,CACE7B,GAAI,EACJ4B,MAAO,UACPC,KAAM,QAER,CACE7B,GAAI,EACJ4B,MAAO,UACPC,KAAM,UAER,CACE7B,GAAI,EACJ4B,MAAO,UACPC,KAAM,SAER,CACE7B,GAAI,EACJ4B,MAAO,UACPC,KAAM,SD/OCyC,EAAY,SAACD,EAAoBF,GAC5C,IAAMG,EAAYD,EAAOE,MAAK,SAAC3C,GAAD,OAAWA,EAAM5B,KAAOmE,KACtD,OAAOG,EAAYA,EAAU1C,MAAQ,WAG1B4C,EAAmB,uCAAG,WACjCrC,GADiC,SAAAsC,EAAA,sEAGpBC,KAAKC,MAChBC,aAAaC,QAAQ1C,IAAQuC,KAAKI,UAAUZ,EAAU/B,KAJvB,mFAAH,sDAQnB4C,EAAmB,uCAAG,WACjC5C,EACA6C,GAFiC,SAAAP,EAAA,sEAI3BG,aAAaK,QAAQ9C,EAAKuC,KAAKI,UAAUE,IAJd,2CAAH,wDAOnBE,EAAuB,uCAAG,WACrC/C,GADqC,SAAAsC,EAAA,sEAG/BG,aAAaK,QAAQ9C,EAAKuC,KAAKI,UAAUZ,EAAU/B,KAHpB,2CAAH,sDAOvBgD,EAAa,CAExBC,QAAS,SACPnD,EACAoD,EACAlD,EACAzC,GAEA,OAAOuC,EAAMC,KAAI,SAACoD,GAChB,OAAIA,EAAKtF,KAAOqF,EACP,eACFC,EADL,eAEGnD,EAAMzC,IAGJ4F,MAKXC,QAAS,SACPzB,EACAM,EACAiB,EACAlD,EACAzC,GACY,IAAD,OACX,OAAOoE,EAAM5B,KAAI,SAACpD,GAChB,GAAIA,EAAKkB,KAAOoE,EAAQ,CACtB,IAAMoB,EAAsB,EAAKJ,QAC/BtG,EAAKmD,MACLoD,EACAlD,EACAzC,GAEF,OAAO,eAAKZ,EAAZ,CAAkBmD,MAAM,YAAKuD,KAE/B,OAAO1G,OEmBE2G,EA7EkB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAAmB,EAClBjH,IAA3B4F,EAD6C,EAC7CA,OAAQsB,EADqC,EACrCA,QAAS7B,EAD4B,EAC5BA,MAD4B,EAGb9E,oBAAS,GAHI,mBAG9C4G,EAH8C,KAGhCC,EAHgC,OAIhB7G,mBAASqF,EAAO,GAAGrE,IAJH,mBAI9C8F,EAJ8C,KAI/BC,EAJ+B,OAKjB/G,mBAAS,IALQ,mBAK9CG,EAL8C,KAKlCC,EALkC,OAMnBJ,oBAAS,GANU,mBAM9CK,EAN8C,KAMnCC,EANmC,KAQrD,GAAIwE,EAAMvC,OAASmE,EAAc,OAAO,KAExC,IACMM,EAAY,WAChBH,GAAgB,GAChBzG,EAAc,IACd2G,EAAY1B,EAAO,GAAGrE,IACtBV,GAAa,IAUf,OACE,yBAAKE,UAAW,YACd,kBAAC,EAAD,CACEsD,YAlBY,kBAAY+C,GAAgB,IAmBxCnD,MAAO,CACL,CACEH,YAAa,QACbD,KAAM,kBAAC,EAAD,MACNT,KAAM,WACN7B,IF3CF,IAAIiG,SEgDPL,GACC,yBAAKpG,UAAU,mBACb,yBAAKA,UAAU,kBAAkBO,QAASiG,GACxC,kBAAC,EAAD,OAGF,2BACExG,UAAW,QACXC,KAAK,OACLE,YAAa,eACbD,MAAOP,EACPS,SAjCiB,SAACC,GAAD,OACzBT,EAAcS,EAAEC,OAAOJ,UAmCjB,wBAAIF,UAAU,oBACX6E,EAAOnC,KAAI,SAACN,GAAD,OACV,wBACEO,IAAKP,EAAM5B,GACXD,QAAS,kBAAMgG,EAAYnE,EAAM5B,KACjCR,UAAWoC,EAAM5B,KAAO8F,EAAgB,SAAW,IAEnD,kBAAC,EAAD,CAAOlE,MAAOA,EAAMA,aAI1B,4BACEpC,UAAW,SACXO,QA9CQ,WAChBT,GAAa,GACbqG,EAAQxG,EAAWc,OAAQ6F,EAAeE,IA6ClC9F,UAAWf,GAAcE,GAExBA,EAAY,aAAe,UCtEzB6G,EAVW,WACxB,OACE,2BAAO1G,UAAU,WACf,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAASkG,aAAc,OC6CdS,EA/CO,WACpB,IAAIlD,EAAWC,cADW,EAUtBzE,IANFqF,EAJwB,EAIxBA,MACAO,EALwB,EAKxBA,OACAxB,EANwB,EAMxBA,WACAuD,EAPwB,EAOxBA,cACAC,EARwB,EAQxBA,MACAC,EATwB,EASxBA,cAGFnF,qBAAU,WACRkF,MACC,CAACA,IAEJlF,qBAAU,WACRiF,EAAcnD,EAASI,YACtB,CAACJ,EAASI,SAAUS,EAAOsC,IAE9B,IAAMG,EAAmBzC,EAAMvC,OAAS,EAClCiF,EAAoBnC,EAAO9C,OAAS,EAE1C,OACE,0BAAM/B,UAAW,QACf,4BAAQA,UAAW,YAAaO,QAASuG,GAAzC,cAICC,GAAWC,EAAW,kBAAC,EAAD,MAAc,aAErC,yBAAKhH,UAAU,eACb,kBAAC,IAAD,CAAOiH,KAAM,IAAKC,OAAK,GACpBH,GACCzC,EAAM5B,KAAI,SAACpD,GAAD,OACR,kBAAC,EAAD,CAAOqD,IAAKrD,EAAKkB,GAAIlB,KAAMA,EAAM2C,cAAY,QAInD,kBAAC,IAAD,CAAOgF,KAAM,cACVF,GAA0B,OAAf1D,GAAuB,kBAAC,EAAD,CAAO/D,KAAM+D,Q,eC5C7C8D,EAAS,CACpB7C,MAAO,CACL8C,SAAS,WAAD,4BAAE,WAAOC,GAAP,2BAAApC,EAAA,6DAA4BqC,EAA5B,+BAAmD,GAAnD,kBAEA/B,EAAoB,QAAS8B,GAF7B,sDAINE,MAAMD,GAJA,wDAAF,mDAAC,IAQX7E,MAAO,CACL+E,SAAS,WAAD,4BAAE,WAAOxB,GAAP,2BAAAf,EAAA,6DAA4BqC,EAA5B,+BAAmD,GAAnD,kBAEA/B,EAAoB,QAASS,GAF7B,sDAINuB,MAAMD,GAJA,wDAAF,mDAAC,GAQTG,SAAS,WAAD,4BAAE,WACRhF,EACAiF,EACAC,GAHQ,SAAA1C,EAAA,+EAMAM,EAAoB,QAAS9C,GAN7B,OAONiF,IAPM,+CASNH,MAAM,2CATA,OAWRI,IAXQ,yDAAF,uDAAC,M,SpBZR3J,K,sBAAAA,E,kCAAAA,E,oBAAAA,E,0BAAAA,E,sCAAAA,E,oBAAAA,E,0BAAAA,E,sCAAAA,E,yBAAAA,M,KAmBE,IAAM4J,EAA6B,CACxCtD,MAAO,GACP7B,MAAO,GACPoC,OAAQ,GACRxB,WAAY,MAGDwE,EAAe,WAGR,IAFlBC,EAEiB,uDAFKF,EACtBG,EACiB,uCACjB,OAAQA,EAAO9H,MACb,KAAKjC,EAAWgK,UACd,OAAOD,EAAOE,QAEhB,KAAKjK,EAAWkK,SAAW,IACV7F,EAA8B0F,EAArCI,MAAqB3H,EAAgBuH,EAAxBnD,OAAYD,EAAYoD,EAAZpD,QAC3ByD,EAAU,CACd5H,KACA6B,OACAsC,UACAlC,MAAO,GACPL,MAAO0C,EAAUgD,EAAMjD,OAAQF,IAE3B0C,EAAQ,sBAAOS,EAAMxD,OAAb,CAAoB8D,IAElC,OADAjB,EAAO7C,MAAM8C,SAASC,EAAU,+BACzB,eAAKS,EAAZ,CAAmBxD,MAAO+C,IAG5B,KAAKrJ,EAAWqK,YACd,IAAMhB,EAAWS,EAAMxD,MAAMgE,QAAO,SAAC1E,GAAD,OAAUA,EAAKpD,KAAOuH,EAAOvH,MAKjE,OAJA2G,EAAO7C,MAAM8C,SACXC,EACA,gDAEK,eAAKS,EAAZ,CAAmBxD,MAAO+C,IAG5B,KAAKrJ,EAAWuK,kBAAoB,IAC1B3D,EAAkBmD,EAAlBnD,OAAQuD,EAAUJ,EAAVI,MACVd,EAAWS,EAAMxD,MAAM5B,KAAI,SAACpD,GAChC,OAAIA,EAAKkB,KAAOoE,EACP,eAAKtF,EAAZ,CAAkB+C,KAAM8F,IAEnB7I,KAOT,OALA6H,EAAO7C,MAAM8C,SACXC,EACA,uDAGK,eAAKS,EAAZ,CAAmBxD,MAAO+C,IAI5B,KAAKrJ,EAAWwK,SAAW,IACjB5D,EAAiCmD,EAAjCnD,OAAQ7D,EAAyBgH,EAAzBhH,KAAM2G,EAAmBK,EAAnBL,KAAMC,EAAaI,EAAbJ,SACtBnH,EAAKsH,EAAMrF,MAAMV,OAAS,EAE1B0G,EAAoB,CACxBjI,KACAoE,SACA7D,OACAC,WAAW,GAGPqG,EAAsBS,EAAMxD,MAAM5B,KAAI,SAACpD,GAC3C,OAAIA,EAAKkB,KAAOoE,EACP,eAAKtF,EAAZ,CAAkBmD,MAAM,GAAD,mBAAMnD,EAAKmD,OAAX,CAAkBgG,MAEpCnJ,KAEH0G,EAAmB,sBAAO8B,EAAMrF,OAAb,CAAoBgG,IAI7C,OAFAtB,EAAO1E,MAAMgF,SAASzB,EAAU0B,EAAMC,GAE/B,eAAKG,EAAZ,CAAmBxD,MAAO+C,EAAU5E,MAAOuD,IAG7C,KAAKhI,EAAW0K,YAAc,IACpB9D,EAAmBmD,EAAnBnD,OAAQiB,EAAWkC,EAAXlC,OACVwB,EAAsBS,EAAMxD,MAAM5B,KAAI,SAACpD,GAC3C,OAAIA,EAAKkB,KAAOoE,EACP,eACFtF,EADL,CAEEmD,MAAM,YAAKnD,EAAKmD,MAAM6F,QAAO,SAACxC,GAAD,OAAUA,EAAKtF,KAAOqF,QAGhDvG,KAEH0G,EAAsB8B,EAAMrF,MAAM6F,QACtC,SAACxC,GAAD,OAAUA,EAAKtF,KAAOqF,KAOxB,OAJAsB,EAAO1E,MAAM+E,SACXxB,EACA,gDAEK,eAAK8B,EAAZ,CAAmBxD,MAAO+C,EAAU5E,MAAOuD,IAG7C,KAAKhI,EAAW2K,kBAAoB,IAC1B/D,EAA0BmD,EAA1BnD,OAAQiB,EAAkBkC,EAAlBlC,OAAQ3F,EAAU6H,EAAV7H,MAClBmH,EAAsB1B,EAAWI,QACrC+B,EAAMxD,MACNM,EACAiB,EACA,OACA3F,GAEI8F,EAAsBL,EAAWC,QACrCkC,EAAMrF,MACNoD,EACA,OACA3F,GAOF,OAJAiH,EAAO1E,MAAM+E,SACXxB,EACA,uDAEK,eAAK8B,EAAZ,CAAmBxD,MAAO+C,EAAU5E,MAAOuD,IAG7C,KAAKhI,EAAW4K,WAAa,IACnBhE,EAA8BmD,EAA9BnD,OAAQiB,EAAsBkC,EAAtBlC,OAAQ7E,EAAc+G,EAAd/G,UAClBqG,EAAsB1B,EAAWI,QACrC+B,EAAMxD,MACNM,EACAiB,EACA,YACA7E,GAEIgF,EAAsBL,EAAWC,QACrCkC,EAAMrF,MACNoD,EACA,YACA7E,GAQF,OALAmG,EAAO1E,MAAM+E,SACXxB,EACA,6CAGK,eAAK8B,EAAZ,CAAmBxD,MAAO+C,EAAU5E,MAAOuD,IAI7C,KAAKhI,EAAW6K,gBAAkB,IAE5BC,EADIC,EAAQhB,EAARgB,IAGR,GAAY,MAARA,EAAaD,EAAQ,eAAQhB,EAAR,CAAezE,WAAY,WAC/C,CACH,IAAMuB,EAAiBoE,OAAOD,EAAIhF,MAAM,WAAW,IAC7CV,EACJyE,EAAMxD,MAAMS,MAAK,SAACzF,GAAD,OAAUA,EAAKkB,KAAOoE,MAAW,KACpDkE,EAAQ,eAAQhB,EAAR,CAAezE,eAEzB,OAAOyF,EAGT,QACE,OAAOhB,IAOAmB,EACD,SAACnB,GAAD,MACP,CACC7H,KAAMjC,EAAWgK,UACjBC,QAASH,IAJFmB,EAOF,SAACd,EAAexD,EAAiBC,GAAjC,MACN,CACC3E,KAAMjC,EAAWkK,SACjBC,QACAxD,UACAC,WAZOqE,EAcC,SAACzI,GAAD,MACT,CACCP,KAAMjC,EAAWqK,YACjB7H,OAjBOyI,EAmBM,SAACrE,EAAgBuD,GAAjB,MACd,CACClI,KAAMjC,EAAWuK,kBACjB3D,SACAuD,UAvBOc,EA2BF,SACPrE,EACA7D,EACA2G,EACAC,GAJO,MAMN,CACC1H,KAAMjC,EAAWwK,SACjB5D,SACA7D,OACA2G,OACAC,aAtCOsB,EAwCC,SAACrE,EAAgBiB,GAAjB,MACT,CACC5F,KAAMjC,EAAW0K,YACjB9D,SACAiB,WA5COoD,EA8CM,SAACrE,EAAgBiB,EAAgB3F,GAAjC,MACd,CACCD,KAAMjC,EAAW2K,kBACjB/D,SACAiB,SACA3F,UAnDO+I,EAqDA,SAACrE,EAAgBiB,EAAgB7E,GAAjC,MACR,CACCf,KAAMjC,EAAW4K,WACjBhE,SACAiB,SACA7E,cA1DOiI,EA8DI,SAACF,GAAD,MACZ,CACC9I,KAAMjC,EAAW6K,gBACjBE,QqB9OOG,EAAiC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C5F,EAAUC,cACVC,EAAWC,cAF+C,EAKpC0F,qBAAoBvB,EAAcD,GALE,mBAKvDE,EALuD,KAKhDuB,EALgD,KAQxDzC,EAAgB0C,uBAAY,SAACP,GACjCM,EAASJ,EAAsBF,MAE9B,IAqEGlC,EAAQyC,sBAAW,sBAAC,kCAAArE,EAAA,sEAMaD,EAAoB,SANjC,cAMlBuE,EANkB,gBAOOvE,EAAoB,SAP3B,cAOlBvC,EAPkB,gBAQSuC,EAAoB,UAR7B,OAQlBH,EARkB,OAWlBP,EAAmBiF,EAAS7G,KAAI,SAAC8G,GAErC,IAAMC,EAAuBhH,EAAM6F,QACjC,SAACxC,GAAD,OAAUA,EAAKlB,SAAW4E,EAAQhJ,MAG9BkJ,EAAoB5E,EAAUD,EAAQ2E,EAAQ7E,SAEpD,OAAO,eAAK6E,EAAZ,CAAqB/G,MAAOgH,EAAWrH,MAAOsH,OAGhDL,EAASJ,EAAiB,CAAE3E,QAAO7B,QAAOoC,SAAQxB,WAAY,QAC9DuD,EAAcnD,EAASI,UAvBC,4CAyBvB,IAIGiD,EAAa,uCAAG,sBAAA7B,EAAA,sEAGdS,EAAwB,SAHV,uBAIdA,EAAwB,SAJV,uBAKdA,EAAwB,UALV,uBAMdmB,IANc,OAOM,MAAtBpD,EAASI,UAAkBN,EAAQW,KAAR,KAPX,2CAAH,qDAWnB,OACE,kBAACrF,EAAa8K,SAAd,CACEzJ,MAAK,eACA4H,EADA,CAEHlB,gBACAC,QACAC,gBACAX,QAhHU,SACdgC,EACAxD,EACAgD,GAEA,IAAM/C,EAASkD,EAAMxD,MAAMvC,OAAS,EACpCsH,EAASJ,EAAgBd,EAAOxD,EAASC,IACzCrB,EAAQW,KAAR,iBAAuBU,IACvB+C,KAyGIpI,QArFU,SACdqF,EACA7D,EACA2G,EACAC,GAEA0B,EAASJ,EAAgBrE,EAAQ7D,EAAM2G,EAAMC,KAgFzC1G,WA3Ea,SAAC2D,EAAgBiB,GAClCwD,EAASJ,EAAmBrE,EAAQiB,KA2EhCzC,WAtGa,SAAC5C,GACd+B,OAAOqH,QAAQ,6CACjBP,EAASJ,EAAmBzI,IAC5B+C,EAAQW,KAAK,OAoGXhC,gBA9FkB,SAAC0C,EAAgBuD,GACvCkB,EAASJ,EAAwBrE,EAAQuD,KA8FrCjH,gBAxEkB,SACtB0D,EACAiB,EACA3F,GAEAmJ,EAASJ,EAAwBrE,EAAQiB,EAAQ3F,KAoE7CiB,UA/DY,SAChByD,EACAiB,EACA7E,GAEAqI,EAASJ,EAAkBrE,EAAQiB,EAAQ7E,QA6DxCmI,IC5JPU,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.a8d512e2.chunk.js","sourcesContent":["import {\r\n  ColorsType,\r\n  ListsType,\r\n  ListType,\r\n  TasksType,\r\n  TaskType,\r\n} from \"../types/types\";\r\nimport { changeTask, findColor } from \"../utils\";\r\nimport { server } from \"../api/api\";\r\n\r\nenum ActionType {\r\n  SET_STATE = \"SET_STATE\",\r\n  SET_ACTIVE_LIST = \"SET_ACTIVE_LIST\",\r\n  ADD_LIST = \"ADD_LIST\",\r\n  REMOVE_LIST = \"REMOVE_LIST\",\r\n  CHANGE_LIST_TITLE = \"CHANGE_LIST_TITLE\",\r\n  ADD_TASK = \"ADD_TASK\",\r\n  REMOVE_TASK = \"REMOVE_TASK\",\r\n  CHANGE_TASK_TITLE = \"CHANGE_TASK_TITLE\",\r\n  CHECK_TASK = \"CHECK_TASK\",\r\n}\r\n\r\nexport type InitialState = {\r\n  lists: ListsType;\r\n  tasks: TasksType;\r\n  colors: ColorsType;\r\n  activeList: ListType | null;\r\n};\r\n\r\nexport const initialState: InitialState = {\r\n  lists: [],\r\n  tasks: [],\r\n  colors: [],\r\n  activeList: null,\r\n};\r\n\r\nexport const StoreReducer = (\r\n  state: InitialState = initialState,\r\n  action: ActionsType\r\n): InitialState => {\r\n  switch (action.type) {\r\n    case ActionType.SET_STATE:\r\n      return action.payload;\r\n    //BEGIN LIST\r\n    case ActionType.ADD_LIST: {\r\n      const { title: name, listId: id, colorId } = action;\r\n      const newList = {\r\n        id,\r\n        name,\r\n        colorId,\r\n        tasks: [],\r\n        color: findColor(state.colors, colorId),\r\n      };\r\n      const newLists = [...state.lists, newList];\r\n      server.lists.setLists(newLists, \"Sorry, I can't add the list\");\r\n      return { ...state, lists: newLists };\r\n    }\r\n\r\n    case ActionType.REMOVE_LIST: {\r\n      const newLists = state.lists.filter((item) => item.id !== action.id);\r\n      server.lists.setLists(\r\n        newLists,\r\n        \"Something is wrong. I can't delete this list\"\r\n      );\r\n      return { ...state, lists: newLists };\r\n    }\r\n\r\n    case ActionType.CHANGE_LIST_TITLE: {\r\n      const { listId, title } = action;\r\n      const newLists = state.lists.map((list) => {\r\n        if (list.id === listId) {\r\n          return { ...list, name: title };\r\n        }\r\n        return list;\r\n      });\r\n      server.lists.setLists(\r\n        newLists,\r\n        \"Something is wrong. I can't change the name of list\"\r\n      );\r\n\r\n      return { ...state, lists: newLists };\r\n    }\r\n    //END LIST\r\n    //BEGIN TASK\r\n    case ActionType.ADD_TASK: {\r\n      const { listId, text, then, callback } = action;\r\n      const id = state.tasks.length + 1;\r\n\r\n      const newTask: TaskType = {\r\n        id,\r\n        listId,\r\n        text,\r\n        completed: false,\r\n      };\r\n\r\n      const newLists: ListsType = state.lists.map((list) => {\r\n        if (list.id === listId) {\r\n          return { ...list, tasks: [...list.tasks, newTask] };\r\n        }\r\n        return list;\r\n      });\r\n      const newTasks: TasksType = [...state.tasks, newTask];\r\n\r\n      server.tasks.addTasks(newTasks, then, callback);\r\n\r\n      return { ...state, lists: newLists, tasks: newTasks };\r\n    }\r\n\r\n    case ActionType.REMOVE_TASK: {\r\n      const { listId, taskId } = action;\r\n      const newLists: ListsType = state.lists.map((list) => {\r\n        if (list.id === listId) {\r\n          return {\r\n            ...list,\r\n            tasks: [...list.tasks.filter((task) => task.id !== taskId)],\r\n          };\r\n        }\r\n        return list;\r\n      });\r\n      const newTasks: TasksType = state.tasks.filter(\r\n        (task) => task.id !== taskId\r\n      );\r\n\r\n      server.tasks.setTasks(\r\n        newTasks,\r\n        \"Something is wrong. I can't delete this task\"\r\n      );\r\n      return { ...state, lists: newLists, tasks: newTasks };\r\n    }\r\n\r\n    case ActionType.CHANGE_TASK_TITLE: {\r\n      const { listId, taskId, value } = action;\r\n      const newLists: ListsType = changeTask.ofLists(\r\n        state.lists,\r\n        listId,\r\n        taskId,\r\n        \"text\",\r\n        value\r\n      );\r\n      const newTasks: TasksType = changeTask.ofTasks(\r\n        state.tasks,\r\n        taskId,\r\n        \"text\",\r\n        value\r\n      );\r\n\r\n      server.tasks.setTasks(\r\n        newTasks,\r\n        \"Something is wrong. I can't change the text of task\"\r\n      );\r\n      return { ...state, lists: newLists, tasks: newTasks };\r\n    }\r\n\r\n    case ActionType.CHECK_TASK: {\r\n      const { listId, taskId, completed } = action;\r\n      const newLists: ListsType = changeTask.ofLists(\r\n        state.lists,\r\n        listId,\r\n        taskId,\r\n        \"completed\",\r\n        completed\r\n      );\r\n      const newTasks: TasksType = changeTask.ofTasks(\r\n        state.tasks,\r\n        taskId,\r\n        \"completed\",\r\n        completed\r\n      );\r\n\r\n      server.tasks.setTasks(\r\n        newTasks,\r\n        \"Something is wrong. I can't tick the task\"\r\n      );\r\n\r\n      return { ...state, lists: newLists, tasks: newTasks };\r\n    }\r\n    //END TASK\r\n\r\n    case ActionType.SET_ACTIVE_LIST: {\r\n      const { url } = action;\r\n      let newState;\r\n\r\n      if (url === \"/\") newState = { ...state, activeList: null };\r\n      else {\r\n        const listId: number = Number(url.split(\"/lists/\")[1]);\r\n        const activeList =\r\n          state.lists.find((list) => list.id === listId) || null;\r\n        newState = { ...state, activeList };\r\n      }\r\n      return newState;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\ntype InferValueTypes<T> = T extends { [key: string]: infer U } ? U : never;\r\nexport type ActionsType = ReturnType<InferValueTypes<typeof actions>>;\r\n\r\nexport const actions = {\r\n  setState: (state: InitialState) =>\r\n    ({\r\n      type: ActionType.SET_STATE,\r\n      payload: state,\r\n    } as const),\r\n  //BEGIN LIST\r\n  addList: (title: string, colorId: number, listId: number) =>\r\n    ({\r\n      type: ActionType.ADD_LIST,\r\n      title,\r\n      colorId,\r\n      listId,\r\n    } as const),\r\n  removeList: (id: number | string) =>\r\n    ({\r\n      type: ActionType.REMOVE_LIST,\r\n      id,\r\n    } as const),\r\n  changeListTitle: (listId: number, title: string) =>\r\n    ({\r\n      type: ActionType.CHANGE_LIST_TITLE,\r\n      listId,\r\n      title,\r\n    } as const),\r\n  //END LIST\r\n  //BEGIN TASK\r\n  addTask: (\r\n    listId: number,\r\n    text: string,\r\n    then: () => void,\r\n    callback: () => void\r\n  ) =>\r\n    ({\r\n      type: ActionType.ADD_TASK,\r\n      listId,\r\n      text,\r\n      then,\r\n      callback,\r\n    } as const),\r\n  removeTask: (listId: number, taskId: number) =>\r\n    ({\r\n      type: ActionType.REMOVE_TASK,\r\n      listId,\r\n      taskId,\r\n    } as const),\r\n  changeTaskTitle: (listId: number, taskId: number, value: string | number) =>\r\n    ({\r\n      type: ActionType.CHANGE_TASK_TITLE,\r\n      listId,\r\n      taskId,\r\n      value,\r\n    } as const),\r\n  checkTask: (listId: number, taskId: number, completed: boolean) =>\r\n    ({\r\n      type: ActionType.CHECK_TASK,\r\n      listId,\r\n      taskId,\r\n      completed,\r\n    } as const),\r\n  //END TASK\r\n\r\n  setActiveList: (url: string) =>\r\n    ({\r\n      type: ActionType.SET_ACTIVE_LIST,\r\n      url,\r\n    } as const),\r\n};\r\n","import React from \"react\";\r\n\r\nconst EditIcon: React.FC = () => {\r\n  return (\r\n    <svg\r\n      width=\"15\"\r\n      height=\"15\"\r\n      viewBox=\"0 0 15 15\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M0 12.0504V14.5834C0 14.8167 0.183308 15 0.41661 15H2.9496C3.05792 15 3.16624 14.9583 3.24123 14.875L12.34 5.78458L9.21542 2.66001L0.124983 11.7504C0.0416611 11.8338 0 11.9337 0 12.0504ZM14.7563 3.36825C14.8336 3.29116 14.8949 3.1996 14.9367 3.0988C14.9785 2.99801 15 2.88995 15 2.78083C15 2.6717 14.9785 2.56365 14.9367 2.46285C14.8949 2.36205 14.8336 2.27049 14.7563 2.19341L12.8066 0.24367C12.7295 0.166428 12.638 0.105146 12.5372 0.0633343C12.4364 0.021522 12.3283 0 12.2192 0C12.1101 0 12.002 0.021522 11.9012 0.0633343C11.8004 0.105146 11.7088 0.166428 11.6318 0.24367L10.107 1.76846L13.2315 4.89304L14.7563 3.36825V3.36825Z\"\r\n        fill=\"black\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default EditIcon;\r\n","import React from \"react\";\r\n\r\nconst AddIcon: React.FC = () => {\r\n  return (\r\n    <svg\r\n      width=\"12\"\r\n      height=\"12\"\r\n      viewBox=\"0 0 16 16\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M8 1V15\"\r\n        stroke=\"black\"\r\n        strokeWidth=\"2\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n      <path\r\n        d=\"M1 8H15\"\r\n        stroke=\"black\"\r\n        strokeWidth=\"2\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default AddIcon;\r\n","import React, { useContext } from \"react\";\r\nimport { InitialState } from \"./StoreReducer\";\r\n\r\nexport type StoreContextType = InitialState & {\r\n  getDB: () => Promise<void>;\r\n  postDefaultDB: () => Promise<void>;\r\n\r\n  addList: (title: string, colorId: number, callback: () => void) => void;\r\n  removeList: (id: number | string) => void;\r\n  changeListTitle: (listId: number, title: string) => void;\r\n\r\n  addTask: (\r\n    listId: number,\r\n    text: string,\r\n    then: () => void,\r\n    callback: () => void\r\n  ) => void;\r\n  removeTask: (listId: number, taskId: number) => void;\r\n  changeTaskTitle: (\r\n    listId: number,\r\n    taskId: number,\r\n    value: string | number\r\n  ) => void;\r\n  checkTask: (listId: number, taskId: number, completed: boolean) => void;\r\n\r\n  setActiveList: (url: string) => void;\r\n};\r\n\r\nexport const StoreContext = React.createContext<StoreContextType | undefined>(\r\n  undefined\r\n);\r\n\r\nexport const useStoreContext = () => {\r\n  const context = useContext(StoreContext);\r\n\r\n  if (context === undefined) {\r\n    throw new Error(\"context is not provided\");\r\n  }\r\n\r\n  return context;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddIcon from \"../Icons/AddIcon\";\r\nimport { ListType } from \"../../types/types\";\r\nimport { useStoreContext } from \"../../store/StoreContext\";\r\n\r\ntype Props = {\r\n  list: ListType;\r\n};\r\n\r\nexport const AddTaskForm: React.FC<Props> = ({ list }) => {\r\n  const { addTask } = useStoreContext();\r\n\r\n  const [visibleForm, setVisibleForm] = useState(false);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const toggleFormVisible = (): void => {\r\n    setVisibleForm(!visibleForm);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const onAddTask = (): void => {\r\n    setIsLoading(true);\r\n\r\n    addTask(list.id, inputValue.trim(), toggleFormVisible, () =>\r\n      setIsLoading(false)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks__form\">\r\n      {!visibleForm ? (\r\n        <div className=\"tasks__form-new\" onClick={toggleFormVisible}>\r\n          <AddIcon />\r\n          <p>New Task</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"tasks__form-block\">\r\n          <input\r\n            className={\"field\"}\r\n            type=\"text\"\r\n            value={inputValue}\r\n            placeholder={\"Task...\"}\r\n            onChange={onChangeHandler}\r\n          />\r\n          <button\r\n            className={\"button\"}\r\n            onClick={onAddTask}\r\n            disabled={!inputValue || isLoading}\r\n          >\r\n            {isLoading ? \"Loading...\" : \"Add\"}\r\n          </button>\r\n          {!isLoading && (\r\n            <button\r\n              className={\"button __grey\"}\r\n              disabled={isLoading}\r\n              onClick={toggleFormVisible}\r\n            >\r\n              Cancel\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nconst CheckIcon: React.FC = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\r\n      <path d=\"M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CheckIcon;\r\n","import React from \"react\";\r\n\r\nconst RemoveIcon: React.FC = () => {\r\n  return (\r\n    <svg\r\n      width=\"11\"\r\n      height=\"11\"\r\n      viewBox=\"0 0 11 11\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M6.87215 5.5L10.7129 1.65926C10.8952 1.47731 10.9977 1.23039 10.9979 0.972832C10.9982 0.715276 10.8961 0.468178 10.7141 0.285898C10.5321 0.103617 10.2852 0.00108525 10.0277 0.000857792C9.77011 0.000630336 9.52302 0.102726 9.34074 0.284685L5.5 4.12542L1.65926 0.284685C1.47698 0.102404 1.22976 0 0.971974 0C0.714191 0 0.466965 0.102404 0.284685 0.284685C0.102404 0.466965 0 0.714191 0 0.971974C0 1.22976 0.102404 1.47698 0.284685 1.65926L4.12542 5.5L0.284685 9.34074C0.102404 9.52302 0 9.77024 0 10.028C0 10.2858 0.102404 10.533 0.284685 10.7153C0.466965 10.8976 0.714191 11 0.971974 11C1.22976 11 1.47698 10.8976 1.65926 10.7153L5.5 6.87458L9.34074 10.7153C9.52302 10.8976 9.77024 11 10.028 11C10.2858 11 10.533 10.8976 10.7153 10.7153C10.8976 10.533 11 10.2858 11 10.028C11 9.77024 10.8976 9.52302 10.7153 9.34074L6.87215 5.5Z\"\r\n        fill=\"black\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default RemoveIcon;\r\n","import React from \"react\";\r\n\r\nconst TrashIcon: React.FC = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n      <path d=\"M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default TrashIcon;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport CheckIcon from \"../Icons/CheckIcon\";\r\nimport EditIcon from \"../Icons/EditIcon\";\r\nimport RemoveIcon from \"../Icons/RemoveIcon\";\r\nimport TrashIcon from \"../Icons/TrashIcon\";\r\n\r\ntype Props = {\r\n  id: number;\r\n  text: string;\r\n  completed: boolean;\r\n  removeTask: () => void;\r\n  changeTaskTitle: (value: string) => void;\r\n  checkTask: () => void;\r\n};\r\n\r\nexport const Task: React.FC<Props> = ({\r\n  id,\r\n  text,\r\n  completed,\r\n  removeTask,\r\n  changeTaskTitle,\r\n  checkTask,\r\n}) => {\r\n  const [isRemove, setIsRemove] = useState(false);\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [value, setValue] = useState<string>(text);\r\n  const [checkIconClass, setCheckIconClass] = useState<string>(\"\");\r\n\r\n  const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) =>\r\n    setValue(e.target.value);\r\n  const onRemoveHandler = (): void => setIsRemove(!isRemove);\r\n  const onEditHandler = (): void => setIsEdit(!isEdit);\r\n\r\n  const agreeHandler = () => {\r\n    if (isEdit) {\r\n      if (value.trim() !== text) {\r\n        changeTaskTitle(value.trim());\r\n      }\r\n      setIsEdit(false);\r\n    }\r\n    if (isRemove) removeTask();\r\n  };\r\n  const refuseHandler = () => {\r\n    setIsEdit(false);\r\n    setIsRemove(false);\r\n    setValue(text);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isRemove) setCheckIconClass(\"remove\");\r\n    if (isEdit) setCheckIconClass(\"edit\");\r\n  }, [isRemove, isEdit]);\r\n\r\n  return (\r\n    <li className={isRemove || isEdit ? \"active\" : \"\"}>\r\n      <div className=\"checkbox\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id={`task-${id}`}\r\n          checked={completed}\r\n          onChange={checkTask}\r\n        />\r\n        <label htmlFor={`task-${id}`}>\r\n          <CheckIcon />\r\n        </label>\r\n      </div>\r\n\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        readOnly={!isEdit}\r\n        onChange={onChangeHandler}\r\n      />\r\n\r\n      <div className=\"tasks__actions\">\r\n        {isRemove || isEdit ? (\r\n          <>\r\n            {value.trim().length ? (\r\n              <div onClick={agreeHandler} className={checkIconClass}>\r\n                <CheckIcon />\r\n              </div>\r\n            ) : null}\r\n            <div onClick={refuseHandler}>\r\n              <RemoveIcon />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div onClick={onEditHandler}>\r\n              <EditIcon />\r\n            </div>\r\n            <div onClick={onRemoveHandler}>\r\n              <TrashIcon />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Tasks.scss\";\r\n\r\nimport EditIcon from \"../Icons/EditIcon\";\r\nimport { AddTaskForm } from \"./AddTaskForm\";\r\nimport { Task } from \"./Task\";\r\nimport { ListType } from \"../../types/types\";\r\nimport { useStoreContext } from \"../../store/StoreContext\";\r\n\r\ntype Props = {\r\n  list: ListType;\r\n  withoutEmpty?: boolean;\r\n};\r\n\r\nconst Tasks: React.FC<Props> = ({ list, withoutEmpty }) => {\r\n  const {\r\n    changeListTitle,\r\n    changeTaskTitle,\r\n    removeTask,\r\n    checkTask,\r\n  } = useStoreContext();\r\n\r\n  const editTitle = () => {\r\n    const newTitle: string | null = window.prompt(\r\n      \"Write a new name\",\r\n      list.name\r\n    );\r\n    if (newTitle) changeListTitle(list.id, newTitle);\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks\">\r\n      <h2 className={\"tasks__title\"} style={{ color: list.color }}>\r\n        {list.name}\r\n        <span className=\"tasks__title-icon\" onClick={editTitle}>\r\n          <EditIcon />\r\n        </span>\r\n      </h2>\r\n\r\n      {!list.tasks.length && !withoutEmpty && (\r\n        <h3 className={\"tasks__empty\"}>There aren't any tasks</h3>\r\n      )}\r\n\r\n      <ul className=\"tasks__items\">\r\n        {list.tasks.map(({ id, text, completed }) => (\r\n          <Task\r\n            key={id}\r\n            id={id}\r\n            text={text}\r\n            completed={completed}\r\n            removeTask={() => removeTask(list.id, id)}\r\n            changeTaskTitle={(value: string) =>\r\n              changeTaskTitle(list.id, id, value)\r\n            }\r\n            checkTask={() => checkTask(list.id, id, !completed)}\r\n          />\r\n        ))}\r\n      </ul>\r\n\r\n      <AddTaskForm key={list.id} list={list} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\n\r\nconst ListIcon: React.FC = () => {\r\n  return (\r\n    <svg\r\n      width=\"18\"\r\n      height=\"18\"\r\n      viewBox=\"0 0 18 18\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M12.96 8.10001H7.74001C7.24321 8.10001 7.20001 8.50231 7.20001 9.00001C7.20001 9.49771 7.24321 9.90001 7.74001 9.90001H12.96C13.4568 9.90001 13.5 9.49771 13.5 9.00001C13.5 8.50231 13.4568 8.10001 12.96 8.10001V8.10001ZM14.76 12.6H7.74001C7.24321 12.6 7.20001 13.0023 7.20001 13.5C7.20001 13.9977 7.24321 14.4 7.74001 14.4H14.76C15.2568 14.4 15.3 13.9977 15.3 13.5C15.3 13.0023 15.2568 12.6 14.76 12.6ZM7.74001 5.40001H14.76C15.2568 5.40001 15.3 4.99771 15.3 4.50001C15.3 4.00231 15.2568 3.60001 14.76 3.60001H7.74001C7.24321 3.60001 7.20001 4.00231 7.20001 4.50001C7.20001 4.99771 7.24321 5.40001 7.74001 5.40001ZM4.86001 8.10001H3.24001C2.74321 8.10001 2.70001 8.50231 2.70001 9.00001C2.70001 9.49771 2.74321 9.90001 3.24001 9.90001H4.86001C5.35681 9.90001 5.40001 9.49771 5.40001 9.00001C5.40001 8.50231 5.35681 8.10001 4.86001 8.10001ZM4.86001 12.6H3.24001C2.74321 12.6 2.70001 13.0023 2.70001 13.5C2.70001 13.9977 2.74321 14.4 3.24001 14.4H4.86001C5.35681 14.4 5.40001 13.9977 5.40001 13.5C5.40001 13.0023 5.35681 12.6 4.86001 12.6ZM4.86001 3.60001H3.24001C2.74321 3.60001 2.70001 4.00231 2.70001 4.50001C2.70001 4.99771 2.74321 5.40001 3.24001 5.40001H4.86001C5.35681 5.40001 5.40001 4.99771 5.40001 4.50001C5.40001 4.00231 5.35681 3.60001 4.86001 3.60001Z\"\r\n        fill=\"black\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default ListIcon;\r\n","import React from \"react\";\r\n\r\nimport \"./Badge.scss\";\r\n\r\ntype Props = {\r\n  icon?: React.ReactNode;\r\n  color?: string;\r\n  modificator?: string;\r\n};\r\n\r\nconst Badge: React.FC<Props> = ({ icon, color, modificator }) => {\r\n  return icon ? (\r\n    <span className={`badge ${modificator || \"\"}`}>{icon}</span>\r\n  ) : (\r\n    <span className={\"badge __circle\"} style={{ backgroundColor: color }} />\r\n  );\r\n};\r\n\r\nexport default Badge;\r\n","import React from \"react\";\r\nimport Badge from \"../Badge/Badge\";\r\nimport RemoveIcon from \"../Icons/RemoveIcon\";\r\n\r\nimport \"./List.scss\";\r\nimport { ListType, TasksType } from \"../../types/types\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { History } from \"history\";\r\n\r\ntype ItemType = {\r\n  id: string | number;\r\n  icon?: React.ReactNode;\r\n  name: string;\r\n  colorId?: number;\r\n  tasks?: TasksType;\r\n  color?: string;\r\n  modificator?: string;\r\n};\r\n\r\ntype Props = {\r\n  items: ItemType[];\r\n  removeList?: (id: number | string) => void;\r\n  activeList?: ListType | null;\r\n  isRemovable?: boolean;\r\n  onClickList?: () => void;\r\n};\r\n\r\nconst List: React.FC<Props> = ({\r\n  items,\r\n  isRemovable,\r\n  removeList,\r\n  activeList,\r\n  onClickList,\r\n}) => {\r\n  const history = useHistory<History>();\r\n  const location = useLocation<Location>();\r\n\r\n  const isActive = (item: ItemType): string => {\r\n    if (!activeList) {\r\n      return item.id === \"all\" ? \"active\" : \"\";\r\n    }\r\n    return activeList.id === item.id ? \"active\" : \"\";\r\n  };\r\n\r\n  const defOnClickList = (id: number | string) => {\r\n    if (onClickList) onClickList();\r\n    else {\r\n      const { pathname } = location;\r\n      const activeListId: string = pathname.split(\"/lists/\")[1];\r\n\r\n      const isActiveList = activeListId === id.toString();\r\n      const isMainPage = pathname === \"/\" && id.toString() === \"all\";\r\n\r\n      if (!isActiveList && !isMainPage) {\r\n        if (id === \"all\") history.push(\"/\");\r\n        else history.push(`/lists/${id}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul className=\"list\">\r\n      {items.map((item) => {\r\n        return (\r\n          <li\r\n            key={item.id}\r\n            className={isActive(item)}\r\n            onClick={() => defOnClickList(item.id)}\r\n          >\r\n            <Badge\r\n              icon={item.icon}\r\n              modificator={item.modificator}\r\n              color={item.color}\r\n            />\r\n            <span>{item.name}</span>\r\n            {item.tasks && <strong>{item.tasks.length}</strong>}\r\n            {isRemovable && removeList && (\r\n              <div\r\n                className=\"list__close\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  removeList(item.id);\r\n                }}\r\n              >\r\n                <RemoveIcon />\r\n              </div>\r\n            )}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport ListIcon from \"./Icons/ListIcon\";\r\nimport List from \"./List/List\";\r\nimport { useStoreContext } from \"../store/StoreContext\";\r\n\r\nconst Lists: React.FC = () => {\r\n  const { lists, removeList, activeList } = useStoreContext();\r\n  return (\r\n    <>\r\n      <List\r\n        items={[\r\n          {\r\n            id: \"all\",\r\n            icon: <ListIcon />,\r\n            name: \"All tasks\",\r\n          },\r\n        ]}\r\n        activeList={activeList}\r\n      />\r\n      <List\r\n        items={lists}\r\n        isRemovable\r\n        removeList={removeList}\r\n        activeList={activeList}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n","import React from \"react\";\r\n\r\nconst CloseIcon: React.FC = () => {\r\n  return (\r\n    <svg\r\n      width=\"21\"\r\n      height=\"21\"\r\n      viewBox=\"0 0 21 21\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        clipRule=\"evenodd\"\r\n        d=\"M20.63 10.315C20.63 10.2335 20.6291 10.1523 20.6272 10.0712C20.4972 4.49574 15.9212 0 10.315 0C4.62737 0 0 4.62737 0 10.315C0 15.9721 4.57776 20.5802 10.2234 20.6296C10.2539 20.6299 10.2844 20.63 10.315 20.63C10.3456 20.63 10.3761 20.6299 10.4066 20.6296C16.0522 20.5802 20.63 15.9721 20.63 10.315ZM14.2303 13.1855C14.1879 13.0885 14.1265 13.0009 14.0497 12.928L11.4373 10.315L14.0497 7.70203C14.1922 7.55202 14.2705 7.35226 14.2679 7.14536C14.2652 6.93846 14.1819 6.74077 14.0355 6.59446C13.8892 6.44814 13.6915 6.36477 13.4846 6.36212C13.2777 6.35947 13.078 6.43775 12.928 6.58028L10.315 9.19275L7.70203 6.58028C7.55202 6.43775 7.35226 6.35947 7.14536 6.36212C6.93846 6.36477 6.74077 6.44814 6.59446 6.59446C6.44814 6.74077 6.36477 6.93846 6.36212 7.14536C6.35947 7.35226 6.43775 7.55202 6.58028 7.70203L9.19275 10.315L6.58028 12.928C6.43775 13.078 6.35947 13.2777 6.36212 13.4846C6.36477 13.6915 6.44814 13.8892 6.59446 14.0355C6.74077 14.1819 6.93846 14.2652 7.14536 14.2679C7.35226 14.2705 7.55202 14.1922 7.70203 14.0497L10.315 11.4373L12.928 14.0497C13.0009 14.1265 13.0885 14.1879 13.1855 14.2303C13.2826 14.2727 13.3872 14.2952 13.4931 14.2966C13.599 14.298 13.7041 14.2781 13.8022 14.2382C13.9003 14.1983 13.9894 14.1392 14.0643 14.0643C14.1392 13.9894 14.1983 13.9003 14.2382 13.8022C14.2781 13.7041 14.298 13.599 14.2966 13.4931C14.2953 13.3872 14.2727 13.2826 14.2303 13.1855Z\"\r\n        fill=\"#5E5E5E\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CloseIcon;\r\n","import { ColorsType, DefaultDB, ListsType, TasksType } from \"./types/types\";\r\nimport { defaultDataBase } from \"./defaultDB\";\r\n\r\nconst defaultDB: DefaultDB = defaultDataBase;\r\n\r\nexport const randomId = (): number => {\r\n  return +new Date();\r\n};\r\n\r\nexport const findColor = (colors: ColorsType, colorId: number): string => {\r\n  const findColor = colors.find((color) => color.id === colorId);\r\n  return findColor ? findColor.color : \"#000000\";\r\n};\r\n\r\nexport const localStorageGetItem = async <T, K extends keyof DefaultDB>(\r\n  key: K\r\n): Promise<T> => {\r\n  return await JSON.parse(\r\n    localStorage.getItem(key) || JSON.stringify(defaultDB[key])\r\n  );\r\n};\r\n\r\nexport const localStorageSetItem = async <K extends keyof DefaultDB>(\r\n  key: K,\r\n  obj: DefaultDB[K]\r\n): Promise<void> => {\r\n  await localStorage.setItem(key, JSON.stringify(obj));\r\n};\r\n\r\nexport const localStoragePostDefault = async <K extends keyof DefaultDB>(\r\n  key: K\r\n): Promise<void> => {\r\n  await localStorage.setItem(key, JSON.stringify(defaultDB[key]));\r\n};\r\n\r\n//BEGIN changeTask\r\nexport const changeTask = {\r\n  //this method changes task of tasks (state.tasks), not task of list.tasks (state.lists[listId].tasks)\r\n  ofTasks: (\r\n    tasks: TasksType,\r\n    taskId: number,\r\n    key: string,\r\n    value: number | string | boolean\r\n  ): TasksType => {\r\n    return tasks.map((task) => {\r\n      if (task.id === taskId) {\r\n        return {\r\n          ...task,\r\n          [key]: value,\r\n        };\r\n      }\r\n      return task;\r\n    });\r\n  },\r\n\r\n  //this method changes task of list.tasks (state.lists[listId].tasks), not task of tasks (state.tasks)\r\n  ofLists: function (\r\n    lists: ListsType,\r\n    listId: number,\r\n    taskId: number,\r\n    key: string,\r\n    value: string | number | boolean\r\n  ): ListsType {\r\n    return lists.map((list) => {\r\n      if (list.id === listId) {\r\n        const newTasks: TasksType = this.ofTasks(\r\n          list.tasks,\r\n          taskId,\r\n          key,\r\n          value\r\n        );\r\n        return { ...list, tasks: [...newTasks] };\r\n      }\r\n      return list;\r\n    });\r\n  },\r\n};\r\n//END changeTask\r\n","export const defaultDataBase = {\r\n  lists: [\r\n    {\r\n      name: \"HTML\",\r\n      colorId: 8,\r\n      tasks: [],\r\n      id: 1,\r\n    },\r\n    {\r\n      name: \"CSS\",\r\n      colorId: 3,\r\n      tasks: [],\r\n      id: 2,\r\n    },\r\n    {\r\n      name: \"JavaScript\",\r\n      colorId: 5,\r\n      tasks: [],\r\n      id: 3,\r\n    },\r\n    {\r\n      name: \"React\",\r\n      colorId: 6,\r\n      tasks: [],\r\n      id: 4,\r\n    },\r\n    {\r\n      name: \"Shopping\",\r\n      colorId: 7,\r\n      tasks: [],\r\n      id: 5,\r\n    },\r\n    {\r\n      name: \"Other\",\r\n      colorId: 4,\r\n      tasks: [],\r\n      id: 6,\r\n    },\r\n  ],\r\n  tasks: [\r\n    {\r\n      listId: 1,\r\n      text: \"Tag div\",\r\n      completed: true,\r\n      id: 1,\r\n    },\r\n    {\r\n      listId: 1,\r\n      text: \"Tag a\",\r\n      completed: true,\r\n      id: 2,\r\n    },\r\n    {\r\n      listId: 1,\r\n      text: \"Tag img\",\r\n      completed: false,\r\n      id: 3,\r\n    },\r\n    {\r\n      listId: 1,\r\n      text: \"Head\",\r\n      completed: true,\r\n      id: 4,\r\n    },\r\n    {\r\n      listId: 1,\r\n      text: \"Body\",\r\n      completed: false,\r\n      id: 5,\r\n    },\r\n    {\r\n      listId: 2,\r\n      text: \":after\",\r\n      completed: false,\r\n      id: 6,\r\n    },\r\n    {\r\n      listId: 2,\r\n      text: \":before\",\r\n      completed: true,\r\n      id: 7,\r\n    },\r\n    {\r\n      listId: 2,\r\n      text: \"color\",\r\n      completed: false,\r\n      id: 8,\r\n    },\r\n    {\r\n      listId: 2,\r\n      text: \"background\",\r\n      completed: false,\r\n      id: 9,\r\n    },\r\n    {\r\n      listId: 2,\r\n      text: \"font-family\",\r\n      completed: true,\r\n      id: 10,\r\n    },\r\n    {\r\n      listId: 3,\r\n      text: \".trim()\",\r\n      completed: false,\r\n      id: 11,\r\n    },\r\n    {\r\n      listId: 3,\r\n      text: \".map()\",\r\n      completed: false,\r\n      id: 12,\r\n    },\r\n    {\r\n      listId: 3,\r\n      text: \".find()\",\r\n      completed: true,\r\n      id: 13,\r\n    },\r\n    {\r\n      listId: 3,\r\n      text: \".filter()\",\r\n      completed: true,\r\n      id: 14,\r\n    },\r\n    {\r\n      listId: 4,\r\n      text: \"Component\",\r\n      completed: false,\r\n      id: 15,\r\n    },\r\n    {\r\n      listId: 4,\r\n      text: \"Lifecycle\",\r\n      completed: true,\r\n      id: 16,\r\n    },\r\n    {\r\n      listId: 4,\r\n      text: \"useState\",\r\n      completed: false,\r\n      id: 17,\r\n    },\r\n    {\r\n      listId: 4,\r\n      text: \"useEffect\",\r\n      completed: false,\r\n      id: 18,\r\n    },\r\n    {\r\n      listId: 4,\r\n      text: \"useReducer\",\r\n      completed: true,\r\n      id: 19,\r\n    },\r\n    {\r\n      listId: 5,\r\n      text: \"Hamburger\",\r\n      completed: false,\r\n      id: 20,\r\n    },\r\n    {\r\n      listId: 5,\r\n      text: \"Milk\",\r\n      completed: true,\r\n      id: 21,\r\n    },\r\n    {\r\n      listId: 5,\r\n      text: \"Cheese\",\r\n      completed: true,\r\n      id: 22,\r\n    },\r\n    {\r\n      listId: 5,\r\n      text: \"Butter\",\r\n      completed: true,\r\n      id: 23,\r\n    },\r\n    {\r\n      listId: 5,\r\n      text: \"Bread\",\r\n      completed: true,\r\n      id: 24,\r\n    },\r\n    {\r\n      listId: 6,\r\n      text: \"Task 1\",\r\n      completed: true,\r\n      id: 25,\r\n    },\r\n    {\r\n      listId: 6,\r\n      text: \"Task 2\",\r\n      completed: false,\r\n      id: 26,\r\n    },\r\n    {\r\n      listId: 6,\r\n      text: \"Task 3\",\r\n      completed: true,\r\n      id: 27,\r\n    },\r\n    {\r\n      listId: 6,\r\n      text: \"Task 4\",\r\n      completed: false,\r\n      id: 28,\r\n    },\r\n  ],\r\n  colors: [\r\n    {\r\n      id: 1,\r\n      color: \"#C9D1D3\",\r\n      name: \"grey\",\r\n    },\r\n    {\r\n      id: 2,\r\n      color: \"#42B883\",\r\n      name: \"green\",\r\n    },\r\n    {\r\n      id: 3,\r\n      color: \"#64C4ED\",\r\n      name: \"blue\",\r\n    },\r\n    {\r\n      id: 4,\r\n      color: \"#FFBBCC\",\r\n      name: \"pink\",\r\n    },\r\n    {\r\n      id: 5,\r\n      color: \"#B6E6BD\",\r\n      name: \"lime\",\r\n    },\r\n    {\r\n      id: 6,\r\n      color: \"#C355F5\",\r\n      name: \"purple\",\r\n    },\r\n    {\r\n      id: 7,\r\n      color: \"#110133\",\r\n      name: \"black\",\r\n    },\r\n    {\r\n      id: 8,\r\n      color: \"#FF6464\",\r\n      name: \"red\",\r\n    },\r\n  ],\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./AddList.scss\";\r\n\r\nimport Badge from \"../Badge/Badge\";\r\nimport CloseIcon from \"../Icons/CloseIcon\";\r\nimport { randomId } from \"../../utils\";\r\nimport AddIcon from \"../Icons/AddIcon\";\r\nimport List from \"../List/List\";\r\nimport { useStoreContext } from \"../../store/StoreContext\";\r\n\r\ntype Props = {\r\n  maxListsSize: number;\r\n};\r\n\r\nconst AddList: React.FC<Props> = ({ maxListsSize }) => {\r\n  const { colors, addList, lists } = useStoreContext();\r\n\r\n  const [visiblePopup, setVisiblePopup] = useState(false);\r\n  const [selectedColor, selectColor] = useState(colors[0].id);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  if (lists.length > maxListsSize) return null;\r\n\r\n  const showPopup = (): void => setVisiblePopup(true);\r\n  const hidePopup = (): void => {\r\n    setVisiblePopup(false);\r\n    setInputValue(\"\");\r\n    selectColor(colors[0].id);\r\n    setIsLoading(false);\r\n  };\r\n  const inputChangeHandler = (e: React.ChangeEvent<HTMLInputElement>): void =>\r\n    setInputValue(e.target.value);\r\n\r\n  const onAddList = () => {\r\n    setIsLoading(true);\r\n    addList(inputValue.trim(), selectedColor, hidePopup);\r\n  };\r\n\r\n  return (\r\n    <div className={\"add-list\"}>\r\n      <List\r\n        onClickList={showPopup}\r\n        items={[\r\n          {\r\n            modificator: \"__add\",\r\n            icon: <AddIcon />,\r\n            name: \"Add list\",\r\n            id: randomId(),\r\n          },\r\n        ]}\r\n      />\r\n\r\n      {visiblePopup && (\r\n        <div className=\"add-list__popup\">\r\n          <div className=\"add-list__close\" onClick={hidePopup}>\r\n            <CloseIcon />\r\n          </div>\r\n\r\n          <input\r\n            className={\"field\"}\r\n            type=\"text\"\r\n            placeholder={\"Name of list\"}\r\n            value={inputValue}\r\n            onChange={inputChangeHandler}\r\n          />\r\n\r\n          <ul className=\"add-list__colors\">\r\n            {colors.map((color) => (\r\n              <li\r\n                key={color.id}\r\n                onClick={() => selectColor(color.id)}\r\n                className={color.id === selectedColor ? \"active\" : \"\"}\r\n              >\r\n                <Badge color={color.color} />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button\r\n            className={\"button\"}\r\n            onClick={onAddList}\r\n            disabled={!inputValue || isLoading}\r\n          >\r\n            {isLoading ? \"Loading...\" : \"Add\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddList;\r\n","import React from \"react\";\r\nimport Lists from \"./Lists\";\r\nimport AddList from \"./AddList/AddList\";\r\n\r\nconst Sidebar: React.FC = () => {\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      <Lists />\r\n\r\n      <AddList maxListsSize={10} />\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect } from \"react\";\r\nimport Tasks from \"./components/Tasks/Tasks\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport { Route, useLocation } from \"react-router-dom\";\r\nimport { Location } from \"history\";\r\nimport { useStoreContext } from \"./store/StoreContext\";\r\n\r\nconst App: React.FC = () => {\r\n  let location = useLocation<Location>();\r\n\r\n  const {\r\n    lists,\r\n    colors,\r\n    activeList,\r\n    setActiveList,\r\n    getDB,\r\n    postDefaultDB,\r\n  } = useStoreContext();\r\n\r\n  useEffect(() => {\r\n    getDB();\r\n  }, [getDB]);\r\n\r\n  useEffect(() => {\r\n    setActiveList(location.pathname);\r\n  }, [location.pathname, lists, setActiveList]);\r\n\r\n  const isLists: boolean = lists.length > 0;\r\n  const isColors: boolean = colors.length > 0;\r\n\r\n  return (\r\n    <main className={\"todo\"}>\r\n      <button className={\"defaultDB\"} onClick={postDefaultDB}>\r\n        Default DB\r\n      </button>\r\n\r\n      {isLists && isColors ? <Sidebar /> : \"Loading...\"}\r\n\r\n      <div className=\"todo__tasks\">\r\n        <Route path={\"/\"} exact>\r\n          {isLists &&\r\n            lists.map((list) => (\r\n              <Tasks key={list.id} list={list} withoutEmpty />\r\n            ))}\r\n        </Route>\r\n\r\n        <Route path={\"/lists/:id\"}>\r\n          {isLists && activeList !== null && <Tasks list={activeList} />}\r\n        </Route>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ListsType, TasksType } from \"../types/types\";\r\nimport { localStorageSetItem } from \"../utils\";\r\n\r\nexport const server = {\r\n  lists: {\r\n    setLists: async (newLists: ListsType, errorMessage: string = \"\") => {\r\n      try {\r\n        await localStorageSetItem(\"lists\", newLists);\r\n      } catch (e) {\r\n        alert(errorMessage);\r\n      }\r\n    },\r\n  },\r\n  tasks: {\r\n    setTasks: async (newTasks: TasksType, errorMessage: string = \"\") => {\r\n      try {\r\n        await localStorageSetItem(\"tasks\", newTasks);\r\n      } catch {\r\n        alert(errorMessage);\r\n      }\r\n    },\r\n\r\n    addTasks: async (\r\n      tasks: TasksType,\r\n      then: () => void,\r\n      callback: () => void\r\n    ) => {\r\n      try {\r\n        await localStorageSetItem(\"tasks\", tasks);\r\n        then();\r\n      } catch {\r\n        alert(\"Sorry, We weren't able to add this task\");\r\n      }\r\n      callback();\r\n    },\r\n  },\r\n};\r\n","import React, { useCallback, useReducer } from \"react\";\r\nimport { StoreContext } from \"./StoreContext\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { History, Location } from \"history\";\r\nimport {\r\n  ColorsType,\r\n  DefListsType,\r\n  ListsType,\r\n  TasksType,\r\n} from \"../types/types\";\r\nimport {\r\n  actions,\r\n  ActionsType,\r\n  initialState,\r\n  InitialState,\r\n  StoreReducer,\r\n} from \"./StoreReducer\";\r\nimport {\r\n  findColor,\r\n  localStorageGetItem,\r\n  localStoragePostDefault,\r\n} from \"../utils\";\r\n\r\ntype Props = {\r\n  children: React.ReactNode;\r\n};\r\n\r\nexport const StoreProvider: React.FC<Props> = ({ children }) => {\r\n  let history = useHistory<History>();\r\n  let location = useLocation<Location>();\r\n\r\n  type Reducer = React.Reducer<InitialState, ActionsType>;\r\n  const [state, dispatch] = useReducer<Reducer>(StoreReducer, initialState);\r\n\r\n  //BEGIN setActiveList\r\n  const setActiveList = useCallback((url: string): void => {\r\n    dispatch(actions.setActiveList(url));\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  //END setActiveList\r\n\r\n  //BEGIN addList\r\n  const addList = (\r\n    title: string,\r\n    colorId: number,\r\n    callback: () => void\r\n  ): void => {\r\n    const listId = state.lists.length + 1;\r\n    dispatch(actions.addList(title, colorId, listId));\r\n    history.push(`/lists/${listId}`);\r\n    callback();\r\n  };\r\n  //END addList\r\n\r\n  //BEGIN removeList\r\n  const removeList = (id: number | string): void => {\r\n    if (window.confirm(\"Do you really want to delete this list?\")) {\r\n      dispatch(actions.removeList(id));\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n  //END removeList\r\n\r\n  //BEGIN changeListTitle\r\n  const changeListTitle = (listId: number, title: string): void => {\r\n    dispatch(actions.changeListTitle(listId, title));\r\n  };\r\n  //END changeListTitle\r\n\r\n  //BEGIN addTask\r\n  const addTask = (\r\n    listId: number,\r\n    text: string,\r\n    then: () => void,\r\n    callback: () => void\r\n  ): void => {\r\n    dispatch(actions.addTask(listId, text, then, callback));\r\n  };\r\n  //END addTask\r\n\r\n  //BEGIN removeTask\r\n  const removeTask = (listId: number, taskId: number): void => {\r\n    dispatch(actions.removeTask(listId, taskId));\r\n  };\r\n  //END removeTask\r\n\r\n  //BEGIN changeTaskTitle\r\n  const changeTaskTitle = (\r\n    listId: number,\r\n    taskId: number,\r\n    value: string | number\r\n  ): void => {\r\n    dispatch(actions.changeTaskTitle(listId, taskId, value));\r\n  };\r\n  //END changeTaskTitle\r\n\r\n  //BEGIN checkTask\r\n  const checkTask = (\r\n    listId: number,\r\n    taskId: number,\r\n    completed: boolean\r\n  ): void => {\r\n    dispatch(actions.checkTask(listId, taskId, completed));\r\n  };\r\n  //END checkTask\r\n\r\n  //BEGIN getDB\r\n  const getDB = useCallback(async (): Promise<void> => {\r\n    //this method is for get DB from LocalStorage\r\n    //use it one time in useEffect or in postDefaultDB for reload DB\r\n\r\n    //this defLists(DefListsType) isn't like lists(ListsType) for state\r\n    //you need to change this defLists like state lists (ListsType)\r\n    const defLists: DefListsType = await localStorageGetItem(\"lists\");\r\n    const tasks: TasksType = await localStorageGetItem(\"tasks\");\r\n    const colors: ColorsType = await localStorageGetItem(\"colors\");\r\n\r\n    //create normal lists for state\r\n    const lists: ListsType = defLists.map((defList) => {\r\n      //find tasks for this list\r\n      const listTasks: TasksType = tasks.filter(\r\n        (task) => task.listId === defList.id\r\n      );\r\n      //find colors for this list\r\n      const listColor: string = findColor(colors, defList.colorId);\r\n      //return normal list\r\n      return { ...defList, tasks: listTasks, color: listColor };\r\n    });\r\n\r\n    dispatch(actions.setState({ lists, tasks, colors, activeList: null }));\r\n    setActiveList(location.pathname);\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  //END getDB\r\n\r\n  //BEGIN postDefaultDB\r\n  const postDefaultDB = async (): Promise<void> => {\r\n    //post DefaultDB from defaultDB.js to LocalStorage\r\n    //this method is for to come back default state\r\n    await localStoragePostDefault(\"lists\");\r\n    await localStoragePostDefault(\"tasks\");\r\n    await localStoragePostDefault(\"colors\");\r\n    await getDB();\r\n    if (location.pathname !== \"/\") history.push(`/`);\r\n  };\r\n  //END postDefaultDB\r\n\r\n  return (\r\n    <StoreContext.Provider\r\n      value={{\r\n        ...state,\r\n        setActiveList,\r\n        getDB,\r\n        postDefaultDB,\r\n        addList,\r\n        addTask,\r\n        removeTask,\r\n        removeList,\r\n        changeListTitle,\r\n        changeTaskTitle,\r\n        checkTask,\r\n      }}\r\n    >\r\n      {children}\r\n    </StoreContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.scss\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { StoreProvider } from \"./store/StoreProvider\";\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <StoreProvider>\r\n      <App />\r\n    </StoreProvider>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}